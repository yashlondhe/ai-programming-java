version: '3.8'

services:
  ai-deployment-service:
    build: .
    container_name: ai-deployment-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms512m -Xmx2g -XX:+UseG1GC
    volumes:
      - ai-models:/app/models
      - ai-logs:/app/logs
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ai-deployment/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Add a database service for production
  # postgres:
  #   image: postgres:13
  #   container_name: ai-deployment-db
  #   environment:
  #     POSTGRES_DB: ai_deployment
  #     POSTGRES_USER: ai_user
  #     POSTGRES_PASSWORD: ai_password
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - ai-network
  #   restart: unless-stopped

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-deployment-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ai-network
    restart: unless-stopped

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ai-deployment-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - ai-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  ai-models:
    driver: local
  ai-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  # postgres-data:
  #   driver: local

networks:
  ai-network:
    driver: bridge
